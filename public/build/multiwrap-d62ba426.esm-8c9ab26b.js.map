{"version":3,"file":"multiwrap-d62ba426.esm-8c9ab26b.js","sources":["../../node_modules/@thirdweb-dev/sdk/dist/multiwrap-d62ba426.esm.js"],"sourcesContent":["import { utils } from 'ethers';\nimport { C as ContractEncoder, f as fetchCurrencyMetadata } from './fetchCurrencyValue-f402c164.esm.js';\nimport { h as hasERC20Allowance } from './hasERC20Allowance-65f8230f.esm.js';\nimport { n as normalizePriceValue } from './normalizePriceValue-0b2ee3a8.esm.js';\nimport { dG as MULTIWRAP_CONTRACT_ROLES, cu as ContractWrapper, bn as AbiSchema, dH as MultiwrapContractSchema, aP as resolveAddress } from './index-4902f18c.esm.js';\nimport { i as isTokenApprovedForTransfer } from './marketplace-302aa6cf.esm.js';\nimport { b as uploadOrExtractURI } from './QueryParams-fc338c68.esm.js';\nimport { b as buildTransactionFunction, T as Transaction } from './transactions-bf210f84.esm.js';\nimport { C as ContractMetadata, b as ContractAppURI, G as GasCostEstimator, a as ContractEvents } from './contract-appuri-c2530b2f.esm.js';\nimport { C as ContractRoyalty, a as ContractOwner } from './contract-owner-9927b217.esm.js';\nimport { C as ContractRoles } from './contract-roles-107ca68a.esm.js';\nimport { S as StandardErc721 } from './erc-721-standard-ea5aa41f.esm.js';\nimport 'zod';\nimport '@thirdweb-dev/chains';\nimport '@thirdweb-dev/crypto';\nimport 'tiny-invariant';\nimport 'bn.js';\nimport 'bs58';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721AQueryableUpgradeable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILoyaltyCard.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/INFTMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC2771Context.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountFactoryCore.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccount.json';\nimport 'ethers/lib/utils';\nimport 'eventemitter3';\nimport './setErc20Allowance-41d4cdc2.esm.js';\nimport '@thirdweb-dev/storage';\nimport './signature-20263122.esm.js';\nimport '@thirdweb-dev/merkletree';\nimport './assertEnabled-1fa10adb.esm.js';\nimport 'uuid';\nimport './erc-721-ec9e393b.esm.js';\nimport './drop-claim-conditions-81dea1f0.esm.js';\nimport 'fast-deep-equal';\n\n/**\n * Multiwrap lets you wrap any number of ERC20, ERC721 and ERC1155 tokens you own into a single wrapped token bundle.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"multiwrap\");\n * ```\n *\n * @beta\n */\n// TODO create extension wrappers for this\nclass Multiwrap extends StandardErc721 {\n  static contractRoles = MULTIWRAP_CONTRACT_ROLES;\n\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new ContractWrapper(network, address, abi, options, storage);\n    super(contractWrapper, storage, chainId);\n    this.abi = AbiSchema.parse(abi || []);\n    this.metadata = new ContractMetadata(this.contractWrapper, MultiwrapContractSchema, this.storage);\n    this.app = new ContractAppURI(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new ContractRoles(this.contractWrapper, Multiwrap.contractRoles);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n    this.royalties = new ContractRoyalty(this.contractWrapper, this.metadata);\n    this.owner = new ContractOwner(this.contractWrapper);\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the contents of a wrapped token bundle\n   * @example\n   * ```javascript\n   * const contents = await contract.getWrappedContents(wrappedTokenId);\n   * console.log(contents.erc20Tokens);\n   * console.log(contents.erc721Tokens);\n   * console.log(contents.erc1155Tokens);\n   * ```\n   * @param wrappedTokenId - the id of the wrapped token bundle\n   */\n  async getWrappedContents(wrappedTokenId) {\n    const wrappedTokens = await this.contractWrapper.read(\"getWrappedContents\", [wrappedTokenId]);\n    const erc20Tokens = [];\n    const erc721Tokens = [];\n    const erc1155Tokens = [];\n    for (const token of wrappedTokens) {\n      switch (token.tokenType) {\n        case 0:\n          {\n            const tokenMetadata = await fetchCurrencyMetadata(this.contractWrapper.getProvider(), token.assetContract);\n            erc20Tokens.push({\n              contractAddress: token.assetContract,\n              quantity: utils.formatUnits(token.totalAmount, tokenMetadata.decimals)\n            });\n            break;\n          }\n        case 1:\n          {\n            erc721Tokens.push({\n              contractAddress: token.assetContract,\n              tokenId: token.tokenId\n            });\n            break;\n          }\n        case 2:\n          {\n            erc1155Tokens.push({\n              contractAddress: token.assetContract,\n              tokenId: token.tokenId,\n              quantity: token.totalAmount.toString()\n            });\n            break;\n          }\n      }\n    }\n    return {\n      erc20Tokens,\n      erc721Tokens,\n      erc1155Tokens\n    };\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Wrap any number of ERC20/ERC721/ERC1155 tokens into a single wrapped token\n   * @example\n   * ```javascript\n   * const tx = await contract.wrap({\n   *   erc20Tokens: [{\n   *     contractAddress: \"0x...\",\n   *     quantity: \"0.8\"\n   *   }],\n   *   erc721Tokens: [{\n   *     contractAddress: \"0x...\",\n   *     tokenId: \"0\"\n   *   }],\n   *   erc1155Tokens: [{\n   *     contractAddress: \"0x...\",\n   *     tokenId: \"1\",\n   *     quantity: \"2\"\n   *   }]\n   * }, {\n   *     name: \"Wrapped bundle\",\n   *     description: \"This is a wrapped bundle of tokens and NFTs\",\n   *     image: \"ipfs://...\",\n   * });\n   * const receipt = tx.receipt(); // the transaction receipt\n   * const wrappedTokenId = tx.id; // the id of the wrapped token bundle\n   * ```\n   * @param contents - the contents to wrap\n   * @param wrappedTokenMetadata - metadata to represent the wrapped token bundle\n   * @param recipientAddress - Optional. The address to send the wrapped token bundle to\n   */\n  wrap = /* @__PURE__ */buildTransactionFunction(async (contents, wrappedTokenMetadata, recipientAddress) => {\n    const [uri, tokens, recipient] = await Promise.all([uploadOrExtractURI(wrappedTokenMetadata, this.storage), this.toTokenStructList(contents), resolveAddress(recipientAddress ? recipientAddress : await this.contractWrapper.getSignerAddress())]);\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"wrap\",\n      args: [tokens, uri, recipient],\n      parse: receipt => {\n        const event = this.contractWrapper.parseLogs(\"TokensWrapped\", receipt?.logs);\n        if (event.length === 0) {\n          throw new Error(\"TokensWrapped event not found\");\n        }\n        const tokenId = event[0].args.tokenIdOfWrappedToken;\n        return {\n          id: tokenId,\n          receipt,\n          data: () => this.get(tokenId)\n        };\n      }\n    });\n  });\n\n  /**\n   * Unwrap a wrapped token bundle, and retrieve its contents\n   * @example\n   * ```javascript\n   * await contract.unwrap(wrappedTokenId);\n   * ```\n   * @param wrappedTokenId - the id of the wrapped token bundle\n   * @param recipientAddress - Optional. The address to send the unwrapped tokens to\n   */\n  unwrap = /* @__PURE__ */buildTransactionFunction(async (wrappedTokenId, recipientAddress) => {\n    const recipient = await resolveAddress(recipientAddress ? recipientAddress : await this.contractWrapper.getSignerAddress());\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"unwrap\",\n      args: [wrappedTokenId, recipient]\n    });\n  });\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  async toTokenStructList(contents) {\n    const tokens = [];\n    const provider = this.contractWrapper.getProvider();\n    const owner = await this.contractWrapper.getSignerAddress();\n    if (contents.erc20Tokens) {\n      for (const erc20 of contents.erc20Tokens) {\n        const normalizedQuantity = await normalizePriceValue(provider, erc20.quantity, erc20.contractAddress);\n        const hasAllowance = await hasERC20Allowance(this.contractWrapper, erc20.contractAddress, normalizedQuantity);\n        if (!hasAllowance) {\n          throw new Error(`ERC20 token with contract address \"${erc20.contractAddress}\" does not have enough allowance to transfer.\\n\\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\\n\\nawait sdk.getToken(\"${erc20.contractAddress}\").setAllowance(\"${this.getAddress()}\", ${erc20.quantity});\\n\\n`);\n        }\n        tokens.push({\n          assetContract: erc20.contractAddress,\n          totalAmount: normalizedQuantity,\n          tokenId: 0,\n          tokenType: 0\n        });\n      }\n    }\n    if (contents.erc721Tokens) {\n      for (const erc721 of contents.erc721Tokens) {\n        const isApproved = await isTokenApprovedForTransfer(this.contractWrapper.getProvider(), this.getAddress(), erc721.contractAddress, erc721.tokenId, owner);\n        if (!isApproved) {\n          throw new Error(`ERC721 token \"${erc721.tokenId}\" with contract address \"${erc721.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getNFTCollection(\"${erc721.contractAddress}\").setApprovalForToken(\"${this.getAddress()}\", ${erc721.tokenId});\\n\\n`);\n        }\n        tokens.push({\n          assetContract: erc721.contractAddress,\n          totalAmount: 0,\n          tokenId: erc721.tokenId,\n          tokenType: 1\n        });\n      }\n    }\n    if (contents.erc1155Tokens) {\n      for (const erc1155 of contents.erc1155Tokens) {\n        const isApproved = await isTokenApprovedForTransfer(this.contractWrapper.getProvider(), this.getAddress(), erc1155.contractAddress, erc1155.tokenId, owner);\n        if (!isApproved) {\n          throw new Error(`ERC1155 token \"${erc1155.tokenId}\" with contract address \"${erc1155.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getEdition(\"${erc1155.contractAddress}\").setApprovalForAll(\"${this.getAddress()}\", true);\\n\\n`);\n        }\n        tokens.push({\n          assetContract: erc1155.contractAddress,\n          totalAmount: erc1155.quantity,\n          tokenId: erc1155.tokenId,\n          tokenType: 2\n        });\n      }\n    }\n    return tokens;\n  }\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\nexport { Multiwrap };\n"],"names":["utils.formatUnits"],"mappings":"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"}