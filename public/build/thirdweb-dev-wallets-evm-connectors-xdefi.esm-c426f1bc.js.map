{"version":3,"file":"thirdweb-dev-wallets-evm-connectors-xdefi.esm-c426f1bc.js","sources":["../../node_modules/@thirdweb-dev/wallets/evm/connectors/xdefi/dist/thirdweb-dev-wallets-evm-connectors-xdefi.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-d067c271.esm.js';\nimport { a as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError } from '../../../../dist/errors-b8627438.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-3f5c1028.esm.js';\nimport { InjectedConnector } from '../../injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js';\nimport { utils } from 'ethers';\nimport { g as getInjectedXDEFIProvider } from '../../../../dist/getInjectedXDEFIProvider-63fe03f0.esm.js';\nimport '../../../../dist/classPrivateFieldSet-e25e1cec.esm.js';\nimport '../../../../dist/WagmiConnector-6011bbb1.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\nimport '../../../../dist/assertWindowEthereum-2bcf9787.esm.js';\nimport '../../../../dist/url-0d129c6b.esm.js';\nimport '../../../../dist/normalizeChainId-abcb61d5.esm.js';\n\nclass XDEFIConnector extends InjectedConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      name: \"XDEFI\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: getInjectedXDEFIProvider\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options,\n      connectorStorage: arg.connectorStorage\n    });\n    _defineProperty(this, \"id\", walletIds.xdefi);\n  }\n\n  /**\n   * Connect to injected XDEFIWallet provider\n   */\n  async connect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      this.setupListeners();\n\n      // emit \"connecting\" event\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // Attempt to show wallet select prompt with `wallet_requestPermissions` when\n      // `shimDisconnect` is active and account is in disconnected state (flag in storage)\n      let account = null;\n      if (this.options?.shimDisconnect && !Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected) {\n          // Attempt to show another prompt for selecting wallet if already connected\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{\n                eth_accounts: {}\n              }]\n            });\n          } catch (error) {\n            // Not all injected providers support `wallet_requestPermissions` (e.g. iOS).\n            // Only bubble up error if user rejects request\n            if (this.isUserRejectedRequestError(error)) {\n              throw new UserRejectedRequestError(error);\n            }\n          }\n        }\n      }\n\n      // if account is not already set, request accounts and use the first account\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = utils.getAddress(accounts[0]);\n      }\n\n      // get currently connected chainId\n      let connectedChainId = await this.getChainId();\n      // check if connected chain is unsupported\n      let isUnsupported = this.isChainUnsupported(connectedChainId);\n\n      // if chainId is given, but does not match the currently connected chainId, switch to the given chainId\n      if (options.chainId && connectedChainId !== options.chainId) {\n        try {\n          await this.switchChain(options.chainId);\n          // recalculate the chainId and isUnsupported\n          connectedChainId = options.chainId;\n          isUnsupported = this.isChainUnsupported(options.chainId);\n        } catch (e) {\n          console.error(`Could not switch to chain id : ${options.chainId}`, e);\n        }\n      }\n\n      // if shimDisconnect is enabled\n      if (this.options?.shimDisconnect) {\n        // add shimDisconnectKey in storage - this signals that connector is \"connected\"\n        await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      const connectionInfo = {\n        chain: {\n          id: connectedChainId,\n          unsupported: isUnsupported\n        },\n        provider: provider,\n        account\n      };\n      this.emit(\"connect\", connectionInfo);\n      return connectionInfo;\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      if (error.code === -32002) {\n        throw new ResourceUnavailableError(error);\n      }\n      throw error;\n    }\n  }\n}\n\nexport { XDEFIConnector };\n"],"names":["utils.getAddress"],"mappings":"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"}