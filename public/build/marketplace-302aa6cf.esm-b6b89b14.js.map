{"version":3,"file":"marketplace-302aa6cf.esm-b6b89b14.js","sources":["../../node_modules/@thirdweb-dev/sdk/dist/marketplace-302aa6cf.esm.js"],"sourcesContent":["import { Contract, BigNumber } from 'ethers';\nimport invariant from 'tiny-invariant';\nimport { I as InterfaceId_IERC721, a as InterfaceId_IERC1155, D as DEFAULT_QUERY_ALL_COUNT } from './QueryParams-fc338c68.esm.js';\nimport { cu as ContractWrapper, dD as MAX_BPS } from './index-4902f18c.esm.js';\nimport { a as fetchCurrencyValue } from './fetchCurrencyValue-f402c164.esm.js';\n\n/**\n * This method checks if the given token is approved for the transferrerContractAddress contract.\n * This is particularly useful for contracts that need to transfer NFTs on the users' behalf\n *\n * @internal\n * @param provider - The connected provider\n * @param transferrerContractAddress - The address of the marketplace contract\n * @param assetContract - The address of the asset contract.\n * @param tokenId - The token id of the token.\n * @param owner - The address of the account that owns the token.\n * @returns  True if the transferrerContractAddress is approved on the token, false otherwise.\n */\nasync function isTokenApprovedForTransfer(provider, transferrerContractAddress, assetContract, tokenId, owner) {\n  try {\n    const ERC165Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC165.json')).default;\n    const erc165 = new Contract(assetContract, ERC165Abi, provider);\n    const [isERC721, isERC1155] = await Promise.all([erc165.supportsInterface(InterfaceId_IERC721), erc165.supportsInterface(InterfaceId_IERC1155)]);\n    if (isERC721) {\n      const ERC721Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC721.json')).default;\n      const asset = new Contract(assetContract, ERC721Abi, provider);\n      const approved = await asset.isApprovedForAll(owner, transferrerContractAddress);\n      if (approved) {\n        return true;\n      }\n\n      // Handle reverts in case of non-existent tokens\n      let approvedAddress;\n      try {\n        approvedAddress = await asset.getApproved(tokenId);\n      } catch (e) {}\n      return approvedAddress?.toLowerCase() === transferrerContractAddress.toLowerCase();\n    } else if (isERC1155) {\n      const ERC1155Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC1155.json')).default;\n      const asset = new Contract(assetContract, ERC1155Abi, provider);\n      return await asset.isApprovedForAll(owner, transferrerContractAddress);\n    } else {\n      console.error(\"Contract does not implement ERC 1155 or ERC 721.\");\n      return false;\n    }\n  } catch (err) {\n    console.error(\"Failed to check if token is approved\", err);\n    return false;\n  }\n}\n\n/**\n * Checks if the marketplace is approved to make transfers on the assetContract\n * If not, it tries to set the approval.\n * @param contractWrapper - The contract wrapper to use\n * @param marketplaceAddress - The address of the marketplace contract\n * @param assetContract - The address of the asset contract.\n * @param tokenId - The token id of the token.\n * @param from - The address of the account that owns the token.\n */\nasync function handleTokenApproval(contractWrapper, marketplaceAddress, assetContract, tokenId, from) {\n  const ERC165Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC165.json')).default;\n  const erc165 = new ContractWrapper(contractWrapper.getSignerOrProvider(), assetContract, ERC165Abi, contractWrapper.options, contractWrapper.storage);\n  const [isERC721, isERC1155] = await Promise.all([erc165.read(\"supportsInterface\", [InterfaceId_IERC721]), erc165.read(\"supportsInterface\", [InterfaceId_IERC1155])]);\n  // check for token approval\n  if (isERC721) {\n    const ERC721Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC721.json')).default;\n    const asset = new ContractWrapper(contractWrapper.getSignerOrProvider(), assetContract, ERC721Abi, contractWrapper.options, contractWrapper.storage);\n    const approved = await asset.read(\"isApprovedForAll\", [from, marketplaceAddress]);\n    if (!approved) {\n      const isTokenApproved = (await asset.read(\"getApproved\", [tokenId])).toLowerCase() === marketplaceAddress.toLowerCase();\n      if (!isTokenApproved) {\n        await asset.sendTransaction(\"setApprovalForAll\", [marketplaceAddress, true]);\n      }\n    }\n  } else if (isERC1155) {\n    const ERC1155Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC1155.json')).default;\n    const asset = new ContractWrapper(contractWrapper.getSignerOrProvider(), assetContract, ERC1155Abi, contractWrapper.options, contractWrapper.storage);\n    const approved = await asset.read(\"isApprovedForAll\", [from, marketplaceAddress]);\n    if (!approved) {\n      await asset.sendTransaction(\"setApprovalForAll\", [marketplaceAddress, true]);\n    }\n  } else {\n    throw Error(\"Contract must implement ERC 1155 or ERC 721.\");\n  }\n}\n\n/**\n * Used to verify fields in new listing.\n * @internal\n */\n// TODO this should be done in zod\nfunction validateNewListingParam(param) {\n  invariant(param.assetContractAddress !== undefined && param.assetContractAddress !== null, \"Asset contract address is required\");\n  invariant(param.buyoutPricePerToken !== undefined && param.buyoutPricePerToken !== null, \"Buyout price is required\");\n  invariant(param.listingDurationInSeconds !== undefined && param.listingDurationInSeconds !== null, \"Listing duration is required\");\n  invariant(param.startTimestamp !== undefined && param.startTimestamp !== null, \"Start time is required\");\n  invariant(param.tokenId !== undefined && param.tokenId !== null, \"Token ID is required\");\n  invariant(param.quantity !== undefined && param.quantity !== null, \"Quantity is required\");\n  switch (param.type) {\n    case \"NewAuctionListing\":\n      {\n        invariant(param.reservePricePerToken !== undefined && param.reservePricePerToken !== null, \"Reserve price is required\");\n      }\n  }\n}\n\n/**\n * Maps a contract offer to the strict interface\n *\n * @internal\n * @param offer - The offer to map\n * @returns  An `Offer` object\n */\nasync function mapOffer(provider, listingId, offer) {\n  return {\n    quantity: offer.quantityDesired,\n    pricePerToken: offer.pricePerToken,\n    currencyContractAddress: offer.currency,\n    buyerAddress: offer.offeror,\n    quantityDesired: offer.quantityWanted,\n    currencyValue: await fetchCurrencyValue(provider, offer.currency, offer.quantityWanted.mul(offer.pricePerToken)),\n    listingId\n  };\n}\nfunction isWinningBid(winningPrice, newBidPrice, bidBuffer) {\n  bidBuffer = BigNumber.from(bidBuffer);\n  winningPrice = BigNumber.from(winningPrice);\n  newBidPrice = BigNumber.from(newBidPrice);\n  if (winningPrice.eq(BigNumber.from(0))) {\n    return false;\n  }\n  const buffer = newBidPrice.sub(winningPrice).mul(MAX_BPS).div(winningPrice);\n  return buffer.gte(bidBuffer);\n}\nasync function getAllInBatches(start, end, fn) {\n  const batches = [];\n  while (end - start > DEFAULT_QUERY_ALL_COUNT) {\n    batches.push(fn(start, start + DEFAULT_QUERY_ALL_COUNT - 1));\n    start += DEFAULT_QUERY_ALL_COUNT;\n  }\n  batches.push(fn(start, end - 1));\n  return await Promise.all(batches);\n}\n\nexport { isWinningBid as a, getAllInBatches as g, handleTokenApproval as h, isTokenApprovedForTransfer as i, mapOffer as m, validateNewListingParam as v };\n"],"names":[],"mappings":"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"}