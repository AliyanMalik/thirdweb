{"version":3,"file":"thirdweb-dev-wallets-evm-connectors-injected.esm-af96cc13.js","sources":["../../node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-d067c271.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-e25e1cec.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-6011bbb1.esm.js';\nimport { a as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-b8627438.esm.js';\nimport { a as assertWindowEthereum } from '../../../../dist/assertWindowEthereum-2bcf9787.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-0d129c6b.esm.js';\nimport { utils, providers } from 'ethers';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-abcb61d5.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nfunction getInjectedName(ethereum) {\n  if (!ethereum) {\n    return \"Injected\";\n  }\n  const getName = provider => {\n    if (provider.isAvalanche) {\n      return \"Core Wallet\";\n    }\n    if (provider.isBitKeep) {\n      return \"BitKeep\";\n    }\n    if (provider.isBraveWallet) {\n      return \"Brave Wallet\";\n    }\n    if (provider.isCoinbaseWallet) {\n      return \"Coinbase Wallet\";\n    }\n    if (provider.isExodus) {\n      return \"Exodus\";\n    }\n    if (provider.isFrame) {\n      return \"Frame\";\n    }\n    if (provider.isKuCoinWallet) {\n      return \"KuCoin Wallet\";\n    }\n    if (provider.isMathWallet) {\n      return \"MathWallet\";\n    }\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) {\n      return \"1inch Wallet\";\n    }\n    if (provider.isOpera) {\n      return \"Opera\";\n    }\n    if (provider.isPortal) {\n      return \"Ripio Portal\";\n    }\n    if (provider.isTally) {\n      return \"Tally\";\n    }\n    if (provider.isTokenPocket) {\n      return \"TokenPocket\";\n    }\n    if (provider.isTokenary) {\n      return \"Tokenary\";\n    }\n    if (provider.isTrust || provider.isTrustWallet) {\n      return \"Trust Wallet\";\n    }\n    if (provider.isMetaMask) {\n      return \"MetaMask\";\n    }\n  };\n\n  // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n  if (ethereum.providers?.length) {\n    // Deduplicate names using Set\n    // Coinbase Wallet puts multiple providers in `ethereum.providers`\n    const nameSet = new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length) {\n      return names;\n    }\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\nvar _provider = /*#__PURE__*/new WeakMap();\nclass InjectedConnector extends WagmiConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      shimDisconnect: true,\n      getProvider: () => {\n        if (assertWindowEthereum(globalThis.window)) {\n          return globalThis.window.ethereum;\n        }\n      }\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options\n    });\n    /**\n     * Name of the injected connector\n     */\n    /**\n     * Whether the connector is ready to be used\n     *\n     * `true` if the injected provider is found\n     */\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"shimDisconnectKey\", \"injected.shimDisconnect\");\n    /**\n     * handles the `accountsChanged` event from the provider\n     * * emits `change` event if connected to a different account\n     * * emits `disconnect` event if no accounts available\n     */\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    /**\n     * handles the `chainChanged` event from the provider\n     * * emits `change` event if connected to a different chain\n     */\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    /**\n     * handles the `disconnect` event from the provider\n     * * emits `disconnect` event\n     */\n    _defineProperty(this, \"onDisconnect\", async error => {\n      // We need this as MetaMask can emit the \"disconnect\" event upon switching chains.\n      // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n      // https://github.com/MetaMask/providers/pull/120\n      if (error.code === 1013) {\n        const provider = await this.getProvider();\n        if (provider) {\n          try {\n            const isAuthorized = await this.getAccount();\n            if (isAuthorized) {\n              return;\n            }\n          } catch {\n            // If we can't get the account anymore, continue with disconnect\n          }\n        }\n      }\n      this.emit(\"disconnect\");\n\n      // Remove `shimDisconnect` => it signals that wallet is disconnected\n      if (this.options.shimDisconnect) {\n        await this.connectorStorage.removeItem(this.shimDisconnectKey);\n      }\n    });\n    const _provider2 = options.getProvider();\n\n    // set the name of the connector\n    if (typeof options.name === \"string\") {\n      // if name is given, use that\n      this.name = options.name;\n    } else if (_provider2) {\n      // if injected provider is detected, get name from it\n      const detectedName = getInjectedName(_provider2);\n      if (options.name) {\n        this.name = options.name(detectedName);\n      } else {\n        if (typeof detectedName === \"string\") {\n          this.name = detectedName;\n        } else {\n          this.name = detectedName[0];\n        }\n      }\n    } else {\n      // else default to \"Injected\"\n      this.name = \"Injected\";\n    }\n    this.id = \"injected\";\n    this.ready = !!_provider2;\n    this.connectorStorage = arg.connectorStorage;\n  }\n\n  /**\n   * * Connect to the injected provider\n   * * switch to the given chain if `chainId` is specified as an argument\n   */\n  async connect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      this.setupListeners();\n\n      // emit \"connecting\" event\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // request account addresses from injected provider\n      const accountAddresses = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // get the first account address\n      const firstAccountAddress = utils.getAddress(accountAddresses[0]);\n\n      // Switch to given chain if a chainId is specified\n      let connectedChainId = await this.getChainId();\n      // Check if currently connected chain is unsupported\n      // chainId is considered unsupported if chainId is not in the list of this.chains array\n      let isUnsupported = this.isChainUnsupported(connectedChainId);\n\n      // if chainId is specified and it is not the same as the currently connected chain\n      if (options.chainId && connectedChainId !== options.chainId) {\n        // switch to the given chain\n        try {\n          await this.switchChain(options.chainId);\n          // recalculate connectedChainId and isUnsupported\n          connectedChainId = options.chainId;\n          isUnsupported = this.isChainUnsupported(options.chainId);\n        } catch (e) {\n          console.error(`Could not switch to chain id: ${options.chainId}`, e);\n        }\n      }\n\n      // if shimDisconnect is enabled\n      if (this.options.shimDisconnect) {\n        // add the shim shimDisconnectKey => it signals that wallet is connected\n        await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      const connectionInfo = {\n        account: firstAccountAddress,\n        chain: {\n          id: connectedChainId,\n          unsupported: isUnsupported\n        },\n        provider\n      };\n      this.emit(\"connect\", connectionInfo);\n      return connectionInfo;\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      if (error.code === -32002) {\n        throw new ResourceUnavailableError(error);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * disconnect from the injected provider\n   */\n  async disconnect() {\n    // perform cleanup\n    const provider = await this.getProvider();\n    if (!provider?.removeListener) {\n      return;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n\n    // if shimDisconnect is enabled\n    if (this.options.shimDisconnect) {\n      // Remove the shimDisconnectKey => it signals that wallet is disconnected\n      await this.connectorStorage.removeItem(this.shimDisconnectKey);\n    }\n  }\n\n  /**\n   * @returns The first account address from the injected provider\n   */\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n\n    // return checksum address\n    // https://docs.ethers.org/v5/api/utils/address/#utils-getAddress\n    return utils.getAddress(accounts[0]);\n  }\n\n  /**\n   * @returns The `chainId` of the currently connected chain from injected provider normalized to a `number`\n   */\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    return provider.request({\n      method: \"eth_chainId\"\n    }).then(normalizeChainId);\n  }\n\n  /**\n   * get the injected provider\n   */\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider) {\n      _classPrivateFieldSet(this, _provider, provider);\n      // setting listeners\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  /**\n   * get a `signer` for given `chainId`\n   */\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n\n    // ethers.providers.Web3Provider\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  /**\n   *\n   * @returns `true` if the connector is connected and address is available, else `false`\n   */\n  async isAuthorized() {\n    try {\n      // `false` if connector is disconnected\n      if (this.options.shimDisconnect &&\n      // If shim does not exist in storage, wallet is disconnected\n      !Boolean(await this.connectorStorage.getItem(this.shimDisconnectKey))) {\n        return false;\n      }\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      // `false` if no account address available, else `true`\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      // `false` if any error thrown\n      return false;\n    }\n  }\n\n  /**\n   * switch to given chain\n   */\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const chainIdHex = utils.hexValue(chainId);\n    try {\n      // request provider to switch to given chainIdHex\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      });\n      const chain = this.chains.find(_chain => _chain.chainId === chainId);\n      if (chain) {\n        return chain;\n      }\n      return {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        slug: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        chain: \"\",\n        shortName: \"\",\n        testnet: true\n      };\n    } catch (error) {\n      // if could not switch to given chainIdHex\n\n      // if tried to connect to a chain that is not configured\n      const chain = this.chains.find(_chain => _chain.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // if chain is not added to provider\n      if (error.code === 4902 ||\n      // Unwrapping for MetaMask Mobile\n      // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n      error?.data?.originalError?.code === 4902) {\n        try {\n          // request provider to add chain\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: chainIdHex,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          // if user rejects request to add chain\n          if (this.isUserRejectedRequestError(addError)) {\n            throw new UserRejectedRequestError(error);\n          }\n\n          // else other error\n          throw new AddChainError();\n        }\n      }\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    if (provider.on) {\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n    }\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n}\n\nexport { InjectedConnector };\n"],"names":["utils.getAddress","providers.Web3Provider","utils.hexValue"],"mappings":";;;;;;;;;;;;;;;;;;;AAWA,SAAS,eAAe,CAAC,QAAQ,EAAE;AACnC,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG;AACH,EAAE,MAAM,OAAO,GAAG,QAAQ,IAAI;AAC9B,IAAI,IAAI,QAAQ,CAAC,WAAW,EAAE;AAC9B,MAAM,OAAO,aAAa,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,SAAS,EAAE;AAC5B,MAAM,OAAO,SAAS,CAAC;AACvB,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,aAAa,EAAE;AAChC,MAAM,OAAO,cAAc,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,gBAAgB,EAAE;AACnC,MAAM,OAAO,iBAAiB,CAAC;AAC/B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE;AAC3B,MAAM,OAAO,QAAQ,CAAC;AACtB,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE;AAC1B,MAAM,OAAO,OAAO,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,cAAc,EAAE;AACjC,MAAM,OAAO,eAAe,CAAC;AAC7B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,YAAY,EAAE;AAC/B,MAAM,OAAO,YAAY,CAAC;AAC1B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,kBAAkB,IAAI,QAAQ,CAAC,sBAAsB,EAAE;AACxE,MAAM,OAAO,cAAc,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE;AAC1B,MAAM,OAAO,OAAO,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE;AAC3B,MAAM,OAAO,cAAc,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE;AAC1B,MAAM,OAAO,OAAO,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,aAAa,EAAE;AAChC,MAAM,OAAO,aAAa,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,UAAU,EAAE;AAC7B,MAAM,OAAO,UAAU,CAAC;AACxB,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,aAAa,EAAE;AACpD,MAAM,OAAO,cAAc,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,UAAU,EAAE;AAC7B,MAAM,OAAO,UAAU,CAAC;AACxB,KAAK;AACL,GAAG,CAAC;AACJ;AACA;AACA,EAAE,IAAI,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE;AAClC;AACA;AACA,IAAI,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AAC9B,IAAI,IAAI,YAAY,GAAG,CAAC,CAAC;AACzB,IAAI,KAAK,MAAM,QAAQ,IAAI,QAAQ,CAAC,SAAS,EAAE;AAC/C,MAAM,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACnC,MAAM,IAAI,CAAC,IAAI,EAAE;AACjB,QAAQ,IAAI,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC,CAAC;AACjD,QAAQ,YAAY,IAAI,CAAC,CAAC;AAC1B,OAAO;AACP,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACxB,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;AAC/B,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE;AACtB,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC;AAClC,GAAG;AACH,EAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC;AACzC,CAAC;AACD;AACA,IAAI,SAAS,gBAAgB,IAAI,OAAO,EAAE,CAAC;AAC3C,MAAM,iBAAiB,SAAS,cAAc,CAAC;AAC/C,EAAE,WAAW,CAAC,GAAG,EAAE;AACnB,IAAI,MAAM,cAAc,GAAG;AAC3B,MAAM,cAAc,EAAE,IAAI;AAC1B,MAAM,WAAW,EAAE,MAAM;AACzB,QAAQ,IAAI,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AACrD,UAAU,OAAO,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC5C,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN,IAAI,MAAM,OAAO,GAAG;AACpB,MAAM,GAAG,cAAc;AACvB,MAAM,GAAG,GAAG,CAAC,OAAO;AACpB,KAAK,CAAC;AACN,IAAI,KAAK,CAAC;AACV,MAAM,MAAM,EAAE,GAAG,CAAC,MAAM;AACxB,MAAM,OAAO;AACb,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B,CAAC,IAAI,EAAE,SAAS,EAAE;AAChD,MAAM,QAAQ,EAAE,IAAI;AACpB,MAAM,KAAK,EAAE,KAAK,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,IAAI,eAAe,CAAC,IAAI,EAAE,mBAAmB,EAAE,yBAAyB,CAAC,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,CAAC,IAAI,EAAE,mBAAmB,EAAE,MAAM,QAAQ,IAAI;AACjE,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAChC,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC5B,UAAU,OAAO,EAAEA,UAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChD,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA,IAAI,eAAe,CAAC,IAAI,EAAE,gBAAgB,EAAE,OAAO,IAAI;AACvD,MAAM,MAAM,EAAE,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;AAC3C,MAAM,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;AACtD,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC1B,QAAQ,KAAK,EAAE;AACf,UAAU,EAAE;AACZ,UAAU,WAAW;AACrB,SAAS;AACT,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA,IAAI,eAAe,CAAC,IAAI,EAAE,cAAc,EAAE,MAAM,KAAK,IAAI;AACzD;AACA;AACA;AACA,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;AAC/B,QAAQ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AAClD,QAAQ,IAAI,QAAQ,EAAE;AACtB,UAAU,IAAI;AACd,YAAY,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AACzD,YAAY,IAAI,YAAY,EAAE;AAC9B,cAAc,OAAO;AACrB,aAAa;AACb,WAAW,CAAC,MAAM;AAClB;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC9B;AACA;AACA,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AACvC,QAAQ,MAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACvE,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;AAC7C;AACA;AACA,IAAI,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC1C;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC/B,KAAK,MAAM,IAAI,UAAU,EAAE;AAC3B;AACA,MAAM,MAAM,YAAY,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC;AACvD,MAAM,IAAI,OAAO,CAAC,IAAI,EAAE;AACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC/C,OAAO,MAAM;AACb,QAAQ,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;AAC9C,UAAU,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;AACnC,SAAS,MAAM;AACf,UAAU,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AACtC,SAAS;AACT,OAAO;AACP,KAAK,MAAM;AACX;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;AAC7B,KAAK;AACL,IAAI,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC;AACzB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC;AAC9B,IAAI,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACzF,IAAI,IAAI;AACR,MAAM,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AAChD,MAAM,IAAI,CAAC,QAAQ,EAAE;AACrB,QAAQ,MAAM,IAAI,sBAAsB,EAAE,CAAC;AAC3C,OAAO;AACP,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;AAC5B;AACA;AACA,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC3B,QAAQ,IAAI,EAAE,YAAY;AAC1B,OAAO,CAAC,CAAC;AACT;AACA;AACA,MAAM,MAAM,gBAAgB,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC;AACtD,QAAQ,MAAM,EAAE,qBAAqB;AACrC,OAAO,CAAC,CAAC;AACT;AACA;AACA,MAAM,MAAM,mBAAmB,GAAGA,UAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE;AACA;AACA,MAAM,IAAI,gBAAgB,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AACrD;AACA;AACA,MAAM,IAAI,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;AACpE;AACA;AACA,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,gBAAgB,KAAK,OAAO,CAAC,OAAO,EAAE;AACnE;AACA,QAAQ,IAAI;AACZ,UAAU,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAClD;AACA,UAAU,gBAAgB,GAAG,OAAO,CAAC,OAAO,CAAC;AAC7C,UAAU,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACnE,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,UAAU,OAAO,CAAC,KAAK,CAAC,CAAC,8BAA8B,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/E,SAAS;AACT,OAAO;AACP;AACA;AACA,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AACvC;AACA,QAAQ,MAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;AAC5E,OAAO;AACP,MAAM,MAAM,cAAc,GAAG;AAC7B,QAAQ,OAAO,EAAE,mBAAmB;AACpC,QAAQ,KAAK,EAAE;AACf,UAAU,EAAE,EAAE,gBAAgB;AAC9B,UAAU,WAAW,EAAE,aAAa;AACpC,SAAS;AACT,QAAQ,QAAQ;AAChB,OAAO,CAAC;AACR,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC3C,MAAM,OAAO,cAAc,CAAC;AAC5B,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAM,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE;AAClD,QAAQ,MAAM,IAAI,wBAAwB,CAAC,KAAK,CAAC,CAAC;AAClD,OAAO;AACP,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE;AACjC,QAAQ,MAAM,IAAI,wBAAwB,CAAC,KAAK,CAAC,CAAC;AAClD,OAAO;AACP,MAAM,MAAM,KAAK,CAAC;AAClB,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,MAAM,UAAU,GAAG;AACrB;AACA,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AAC9C,IAAI,IAAI,CAAC,QAAQ,EAAE,cAAc,EAAE;AACnC,MAAM,OAAO;AACb,KAAK;AACL,IAAI,QAAQ,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACvE,IAAI,QAAQ,CAAC,cAAc,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AACjE,IAAI,QAAQ,CAAC,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7D;AACA;AACA,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AACrC;AACA,MAAM,MAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACrE,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,MAAM,UAAU,GAAG;AACrB,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AAC9C,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,MAAM,MAAM,IAAI,sBAAsB,EAAE,CAAC;AACzC,KAAK;AACL,IAAI,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC;AAC5C,MAAM,MAAM,EAAE,cAAc;AAC5B,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA,IAAI,OAAOA,UAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,MAAM,UAAU,GAAG;AACrB,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AAC9C,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,MAAM,MAAM,IAAI,sBAAsB,EAAE,CAAC;AACzC,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC,OAAO,CAAC;AAC5B,MAAM,MAAM,EAAE,aAAa;AAC3B,KAAK,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC9B,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,MAAM,WAAW,GAAG;AACtB,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AAChD,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,qBAAqB,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AACvD;AACA,KAAK;AACL,IAAI,OAAO,qBAAqB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,MAAM,SAAS,GAAG;AACpB,IAAI,IAAI;AACR,MAAM,OAAO;AACb,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAC/E,IAAI,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;AAC3F;AACA;AACA,IAAI,OAAO,IAAIC,YAAsB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC5E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,YAAY,GAAG;AACvB,IAAI,IAAI;AACR;AACA,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc;AACrC;AACA,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE;AAC7E,QAAQ,OAAO,KAAK,CAAC;AACrB,OAAO;AACP,MAAM,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AAChD,MAAM,IAAI,CAAC,QAAQ,EAAE;AACrB,QAAQ,MAAM,IAAI,sBAAsB,EAAE,CAAC;AAC3C,OAAO;AACP;AACA,MAAM,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AAC9C,MAAM,OAAO,CAAC,CAAC,OAAO,CAAC;AACvB,KAAK,CAAC,MAAM;AACZ;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,MAAM,WAAW,CAAC,OAAO,EAAE;AAC7B,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AAC9C,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,MAAM,MAAM,IAAI,sBAAsB,EAAE,CAAC;AACzC,KAAK;AACL,IAAI,MAAM,UAAU,GAAGC,QAAc,CAAC,OAAO,CAAC,CAAC;AAC/C,IAAI,IAAI;AACR;AACA,MAAM,MAAM,QAAQ,CAAC,OAAO,CAAC;AAC7B,QAAQ,MAAM,EAAE,4BAA4B;AAC5C,QAAQ,MAAM,EAAE,CAAC;AACjB,UAAU,OAAO,EAAE,UAAU;AAC7B,SAAS,CAAC;AACV,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC;AAC3E,MAAM,IAAI,KAAK,EAAE;AACjB,QAAQ,OAAO,KAAK,CAAC;AACrB,OAAO;AACP,MAAM,OAAO;AACb,QAAQ,OAAO,EAAE,OAAO;AACxB,QAAQ,IAAI,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AACnC,QAAQ,IAAI,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAC7B,QAAQ,cAAc,EAAE;AACxB,UAAU,IAAI,EAAE,OAAO;AACvB,UAAU,QAAQ,EAAE,EAAE;AACtB,UAAU,MAAM,EAAE,KAAK;AACvB,SAAS;AACT,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC;AACjB,QAAQ,KAAK,EAAE,EAAE;AACjB,QAAQ,SAAS,EAAE,EAAE;AACrB,QAAQ,OAAO,EAAE,IAAI;AACrB,OAAO,CAAC;AACR,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB;AACA;AACA;AACA,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC;AAC3E,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAI,uBAAuB,CAAC;AAC1C,UAAU,OAAO;AACjB,UAAU,WAAW,EAAE,IAAI,CAAC,EAAE;AAC9B,SAAS,CAAC,CAAC;AACX,OAAO;AACP;AACA;AACA,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI;AAC7B;AACA;AACA,MAAM,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,KAAK,IAAI,EAAE;AACjD,QAAQ,IAAI;AACZ;AACA,UAAU,MAAM,QAAQ,CAAC,OAAO,CAAC;AACjC,YAAY,MAAM,EAAE,yBAAyB;AAC7C,YAAY,MAAM,EAAE,CAAC;AACrB,cAAc,OAAO,EAAE,UAAU;AACjC,cAAc,SAAS,EAAE,KAAK,CAAC,IAAI;AACnC,cAAc,cAAc,EAAE,KAAK,CAAC,cAAc;AAClD,cAAc,OAAO,EAAE,oBAAoB,CAAC,KAAK,CAAC;AAClD;AACA,cAAc,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;AACjE,aAAa,CAAC;AACd,WAAW,CAAC,CAAC;AACb,UAAU,OAAO,KAAK,CAAC;AACvB,SAAS,CAAC,OAAO,QAAQ,EAAE;AAC3B;AACA,UAAU,IAAI,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAE;AACzD,YAAY,MAAM,IAAI,wBAAwB,CAAC,KAAK,CAAC,CAAC;AACtD,WAAW;AACX;AACA;AACA,UAAU,MAAM,IAAI,aAAa,EAAE,CAAC;AACpC,SAAS;AACT,OAAO;AACP,MAAM,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE;AAClD,QAAQ,MAAM,IAAI,wBAAwB,CAAC,KAAK,CAAC,CAAC;AAClD,OAAO;AACP,MAAM,MAAM,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;AACxC,KAAK;AACL,GAAG;AACH,EAAE,MAAM,cAAc,GAAG;AACzB,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AAC9C,IAAI,IAAI,QAAQ,CAAC,EAAE,EAAE;AACrB,MAAM,QAAQ,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC7D,MAAM,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AACvD,MAAM,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AACnD,KAAK;AACL,GAAG;AACH,EAAE,0BAA0B,CAAC,KAAK,EAAE;AACpC,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;AAC/B,GAAG;AACH;;;;"}