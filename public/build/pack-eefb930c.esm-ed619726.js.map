{"version":3,"file":"pack-eefb930c.esm-ed619726.js","sources":["../../node_modules/@thirdweb-dev/sdk/dist/pack-ff03562b.esm.js","../../node_modules/@thirdweb-dev/sdk/dist/pack-eefb930c.esm.js"],"sourcesContent":["import { N as NFTInputOrUriSchema } from './setErc20Allowance-41d4cdc2.esm.js';\nimport { cz as AmountSchema, ba as BigNumberishSchema, bd as AddressOrEnsSchema } from './index-4902f18c.esm.js';\nimport { R as RawDateSchema } from './assertEnabled-1fa10adb.esm.js';\nimport { z } from 'zod';\n\n/**\n * @internal\n */\nconst CommonWrappableSchema = /* @__PURE__ */(() => z.object({\n  contractAddress: AddressOrEnsSchema\n}))();\n\n/**\n * @internal\n */\nconst ERC20WrappableSchema = /* @__PURE__ */(() => CommonWrappableSchema.extend({\n  quantity: AmountSchema\n}))();\n\n/**\n * @internal\n */\nconst ERC721WrappableSchema = /* @__PURE__ */(() => CommonWrappableSchema.extend({\n  tokenId: BigNumberishSchema\n}))();\n\n/**\n * @internal\n */\nconst ERC1155WrappableSchema = /* @__PURE__ */(() => CommonWrappableSchema.extend({\n  tokenId: BigNumberishSchema,\n  quantity: BigNumberishSchema\n}))();\n\n/**\n * @internal\n */\nconst ERC20RewardSchema = /* @__PURE__ */(() => ERC20WrappableSchema.omit({\n  quantity: true\n}).extend({\n  quantityPerReward: AmountSchema\n}))();\n\n/**\n * @internal\n */\nconst ERC721RewardSchema = ERC721WrappableSchema;\n\n/**\n * @internal\n */\nconst ERC1155RewardSchema = /* @__PURE__ */(() => ERC1155WrappableSchema.omit({\n  quantity: true\n}).extend({\n  quantityPerReward: BigNumberishSchema\n}))();\n\n/**\n * @internal\n */\nconst ERC20RewardContentsSchema = /* @__PURE__ */(() => ERC20RewardSchema.extend({\n  totalRewards: BigNumberishSchema.default(\"1\")\n}))();\n\n/**\n * @internal\n */\nconst ERC721RewardContentsSchema = ERC721RewardSchema;\n\n/**\n * @internal\n */\nconst ERC1155RewardContentsSchema = /* @__PURE__ */(() => ERC1155RewardSchema.extend({\n  totalRewards: BigNumberishSchema.default(\"1\")\n}))();\n\n/**\n * @internal\n */\nconst PackRewardsSchema = /* @__PURE__ */(() => z.object({\n  erc20Rewards: z.array(ERC20RewardSchema).default([]),\n  erc721Rewards: z.array(ERC721RewardSchema).default([]),\n  erc1155Rewards: z.array(ERC1155RewardSchema).default([])\n}))();\n\n/**\n * @internal\n */\nconst PackRewardsOutputSchema = /* @__PURE__ */(() => z.object({\n  erc20Rewards: z.array(ERC20RewardContentsSchema).default([]),\n  erc721Rewards: z.array(ERC721RewardContentsSchema).default([]),\n  erc1155Rewards: z.array(ERC1155RewardContentsSchema).default([])\n}))();\n\n/**\n * @internal\n */\nconst PackMetadataInputSchema = /* @__PURE__ */(() => PackRewardsOutputSchema.extend({\n  packMetadata: NFTInputOrUriSchema,\n  rewardsPerPack: BigNumberishSchema.default(\"1\"),\n  openStartTime: RawDateSchema.default(new Date())\n}))();\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\nexport { ERC20WrappableSchema as E, PackRewardsSchema as P, ERC721WrappableSchema as a, ERC1155WrappableSchema as b, PackRewardsOutputSchema as c, PackMetadataInputSchema as d };\n","import { BigNumber, utils, constants } from 'ethers';\nimport { f as fetchCurrencyMetadata, C as ContractEncoder } from './fetchCurrencyValue-f402c164.esm.js';\nimport { h as hasERC20Allowance } from './hasERC20Allowance-65f8230f.esm.js';\nimport { n as normalizePriceValue } from './normalizePriceValue-0b2ee3a8.esm.js';\nimport { dI as FEATURE_PACK_VRF, cu as ContractWrapper, aP as resolveAddress, b0 as LINK_TOKEN_ADDRESS, dJ as PACK_CONTRACT_ROLES, bn as AbiSchema, c5 as PackContractSchema, H as getRoleHash } from './index-4902f18c.esm.js';\nimport { a as assertEnabled } from './assertEnabled-1fa10adb.esm.js';\nimport { a as ContractEvents, C as ContractMetadata, b as ContractAppURI, G as GasCostEstimator, d as detectContractFeature } from './contract-appuri-c2530b2f.esm.js';\nimport { i as isTokenApprovedForTransfer } from './marketplace-302aa6cf.esm.js';\nimport { b as uploadOrExtractURI } from './QueryParams-fc338c68.esm.js';\nimport { b as buildTransactionFunction, T as Transaction } from './transactions-bf210f84.esm.js';\nimport { C as ContractInterceptor } from './contract-interceptor-69c9c882.esm.js';\nimport { C as ContractRoyalty, a as ContractOwner } from './contract-owner-9927b217.esm.js';\nimport { C as ContractRoles } from './contract-roles-107ca68a.esm.js';\nimport { S as StandardErc1155 } from './erc-1155-standard-c796e369.esm.js';\nimport IPackVRFAbi from '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';\nimport { E as Erc20 } from './erc-20-54a3914e.esm.js';\nimport { c as PackRewardsOutputSchema, d as PackMetadataInputSchema } from './pack-ff03562b.esm.js';\nimport 'zod';\nimport '@thirdweb-dev/chains';\nimport '@thirdweb-dev/crypto';\nimport 'tiny-invariant';\nimport 'bn.js';\nimport 'bs58';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721AQueryableUpgradeable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILoyaltyCard.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/INFTMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC2771Context.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountFactoryCore.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccount.json';\nimport 'ethers/lib/utils';\nimport 'eventemitter3';\nimport '@thirdweb-dev/storage';\nimport './setErc20Allowance-41d4cdc2.esm.js';\nimport './signature-20263122.esm.js';\nimport '@thirdweb-dev/merkletree';\nimport 'uuid';\nimport './erc-1155-103c8d30.esm.js';\nimport 'fast-deep-equal';\nimport './drop-claim-conditions-81dea1f0.esm.js';\n\nclass PackVRF {\n  featureName = FEATURE_PACK_VRF.name;\n  constructor(network, address, storage, options, chainId) {\n    let contractWrapper = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new ContractWrapper(network, address, IPackVRFAbi, options, storage);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.chainId = chainId;\n    this.events = new ContractEvents(this.contractWrapper);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /**\n   * Open pack\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const amount = 1;\n   * const receipt = await contract.pack.open(tokenId, amount);\n   * ```\n   *\n   * @remarks\n   * Open a pack using Chainlink VRFs random number generation\n   * This will return a transaction result with the requestId of the open request, NOT the contents of the pack\n   * To get the contents of the pack, you must call claimRewards once the VRF request has been fulfilled\n   * You can use the canClaimRewards method to check if the VRF request has been fulfilled\n   *\n   * @param tokenId - the id of the pack to open\n   * @param amount - Optional: the amount of packs to open, defaults to 1\n   * @returns\n   * @twfeature PackVRF\n   */\n  open = /* @__PURE__ */buildTransactionFunction((() => {\n    var _this = this;\n    return async function (tokenId) {\n      let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n      return Transaction.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"openPack\",\n        args: [tokenId, amount],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: receipt => {\n          let id = BigNumber.from(0);\n          try {\n            const event = _this.contractWrapper.parseLogs(\"PackOpenRequested\", receipt?.logs);\n            id = event[0].args.requestId;\n          } catch (e) {}\n          return {\n            receipt,\n            id\n          };\n        }\n      });\n    };\n  })());\n\n  /**\n   * Claim the rewards from an opened pack\n   *\n   * @example\n   * ```javascript\n   * const rewards = await contract.pack.claimRewards();\n   * ```\n   *\n   * @remarks This will return the contents of the pack\n   * @remarks Make sure to check if the VRF request has been fulfilled using canClaimRewards() before calling this method\n   * @returns The random rewards from opening a pack\n   * @twfeature PackVRF\n   */\n  claimRewards = /* @__PURE__ */buildTransactionFunction((() => {\n    var _this2 = this;\n    return async function () {\n      let gasLimit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500000;\n      return Transaction.fromContractWrapper({\n        contractWrapper: _this2.contractWrapper,\n        method: \"claimRewards\",\n        args: [],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: async receipt => {\n          const event = _this2.contractWrapper.parseLogs(\"PackOpened\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackOpened event not found\");\n          }\n          const rewards = event[0].args.rewardUnitsDistributed;\n          return await _this2.parseRewards(rewards);\n        }\n      });\n    };\n  })());\n  async parseRewards(rewards) {\n    const erc20Rewards = [];\n    const erc721Rewards = [];\n    const erc1155Rewards = [];\n    for (const reward of rewards) {\n      switch (reward.tokenType) {\n        case 0:\n          {\n            const tokenMetadata = await fetchCurrencyMetadata(this.contractWrapper.getProvider(), reward.assetContract);\n            erc20Rewards.push({\n              contractAddress: reward.assetContract,\n              quantityPerReward: utils.formatUnits(reward.totalAmount, tokenMetadata.decimals).toString()\n            });\n            break;\n          }\n        case 1:\n          {\n            erc721Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString()\n            });\n            break;\n          }\n        case 2:\n          {\n            erc1155Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString(),\n              quantityPerReward: reward.totalAmount.toString()\n            });\n            break;\n          }\n      }\n    }\n    return {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    };\n  }\n\n  /**\n   * Setup a listener for when a pack is opened\n   *\n   * @example\n   * ```javascript\n   * const unsubscribe = await contract.pack.addPackOpenEventListener((packId, openerAddress, rewards) => {\n   *  console.log(`Pack ${packId} was opened by ${openerAddress} and contained:`, rewards);\n   * });\n   * ```\n   *\n   * @param callback - the listener to call when a pack is opened\n   * @returns A unsubscribe function to cleanup the listener\n   * @twfeature PackVRF\n   */\n  async addPackOpenEventListener(callback) {\n    return this.events.addEventListener(\"PackOpened\", async event => {\n      callback(event.data.packId.toString(), event.data.opener, await this.parseRewards(event.data.rewardUnitsDistributed));\n    });\n  }\n\n  /**\n   * Check if a specific wallet can claim rewards after opening a pack\n   *\n   * @example\n   * ```javascript\n   * const canClaim = await contract.pack.canClaimRewards(\"{{wallet_address}}\");\n   * ```\n   * @param claimerAddress - Optional: the address to check if they can claim rewards, defaults to the connected address\n   * @returns whether the connected address can claim rewards after opening a pack\n   * @twfeature PackVRF\n   */\n  async canClaimRewards(claimerAddress) {\n    const address = await resolveAddress(claimerAddress || (await this.contractWrapper.getSignerAddress()));\n    return await this.contractWrapper.read(\"canClaimRewards\", [address]);\n  }\n\n  /**\n   * Open a pack and claim the rewards\n   * @remarks This function will only start the flow of opening a pack, the rewards will be granted automatically to the connected address after VRF request is fulfilled\n   *\n   * @example\n   * ```javascript\n   * const packId = 0;\n   * const amount = 1;\n   * const { id } = await contract.pack.openAndClaim(packId, amount);\n   * ```\n   *\n   * @param packId - The id of the pack to open\n   * @param amount - Optional: the amount of packs to open, defaults to 1\n   * @param gasLimit - Optional: the gas limit to use for the VRF callback transaction, defaults to 500000\n   * @returns\n   * @twfeature PackVRF\n   */\n  async openAndClaim(packId) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n    const receipt = await this.contractWrapper.sendTransaction(\"openPackAndClaimRewards\", [packId, amount, gasLimit], {\n      // Higher gas limit for opening packs\n      gasLimit: BigNumber.from(500000)\n    });\n    let id = BigNumber.from(0);\n    try {\n      const event = this.contractWrapper.parseLogs(\"PackOpenRequested\", receipt?.logs);\n      id = event[0].args.requestId;\n    } catch (e) {}\n    return {\n      receipt,\n      id\n    };\n  }\n\n  /**\n   * Get the LINK balance of the contract\n   *\n   * @example\n   * ```javascript\n   * const balance = await contract.pack.getLinkBalance();\n   * ```\n   *\n   * @returns The balance of LINK in the contract\n   * @twfeature PackVRF\n   */\n  async getLinkBalance() {\n    const ERC20Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC20.json')).default;\n    return this.getLinkContract(ERC20Abi).balanceOf(this.contractWrapper.address);\n  }\n\n  /**\n   * Transfer LINK to this contract\n   *\n   * @example\n   * ```javascript\n   * const amount = 1;\n   * await contract.pack.transferLink(amount);\n   * ```\n   *\n   * @param amount - the amount of LINK to transfer to the contract\n   * @twfeature PackVRF\n   */\n  async transferLink(amount) {\n    const ERC20Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC20.json')).default;\n    await this.getLinkContract(ERC20Abi).transfer(this.contractWrapper.address, amount);\n  }\n  getLinkContract(ERC20Abi) {\n    const linkAddress = LINK_TOKEN_ADDRESS[this.chainId];\n    if (!linkAddress) {\n      throw new Error(`No LINK token address found for chainId ${this.chainId}`);\n    }\n    const contract = new ContractWrapper(this.contractWrapper.getSignerOrProvider(), linkAddress, ERC20Abi, this.contractWrapper.options, this.storage);\n    return new Erc20(contract, this.storage, this.chainId);\n  }\n}\n\n/**\n * Create lootboxes of NFTs with rarity based open mechanics.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"pack\");\n * ```\n *\n * @public\n */\n// TODO create extension wrappers\nclass Pack extends StandardErc1155 {\n  static contractRoles = PACK_CONTRACT_ROLES;\n\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per pack\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular pack\n   * contract.royalties.setTokenRoyaltyInfo(packId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  /**\n   * @internal\n   */\n\n  /**\n   * If enabled in the contract, use the Chainlink VRF functionality to open packs\n   */\n  get vrf() {\n    return assertEnabled(this._vrf, FEATURE_PACK_VRF);\n  }\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new ContractWrapper(network, address, abi, options.gasless && \"openzeppelin\" in options.gasless ? {\n      ...options,\n      gasless: {\n        ...options.gasless,\n        openzeppelin: {\n          ...options.gasless.openzeppelin,\n          useEOAForwarder: true\n        }\n      }\n    } : options, storage);\n    super(contractWrapper, storage, chainId);\n    this.abi = AbiSchema.parse(abi || []);\n    this.metadata = new ContractMetadata(this.contractWrapper, PackContractSchema, this.storage);\n    this.app = new ContractAppURI(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new ContractRoles(this.contractWrapper, Pack.contractRoles);\n    this.royalties = new ContractRoyalty(this.contractWrapper, this.metadata);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n    this.interceptor = new ContractInterceptor(this.contractWrapper);\n    this.owner = new ContractOwner(this.contractWrapper);\n    this._vrf = this.detectVrf();\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n    this._vrf?.onNetworkUpdated(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a single Pack\n   *\n   * @remarks Get all the data associated with every pack in this contract.\n   *\n   * By default, returns the first 100 packs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const pack = await contract.get(0);\n   * console.log(packs;\n   * ```\n   */\n  async get(tokenId) {\n    return this.erc1155.get(tokenId);\n  }\n\n  /**\n   * Get All Packs\n   *\n   * @remarks Get all the data associated with every pack in this contract.\n   *\n   * By default, returns the first 100 packs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const packs = await contract.getAll();\n   * console.log(packs;\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The pack metadata for all packs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc1155.getAll(queryParams);\n  }\n\n  /**\n   * Get Owned Packs\n   *\n   * @remarks Get all the data associated with the packs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the packs of\n   * const address = \"{{wallet_address}}\";\n   * const packss = await contract.getOwned(address);\n   * ```\n   *\n   * @returns The pack metadata for all the owned packs in the contract.\n   */\n  async getOwned(walletAddress) {\n    return this.erc1155.getOwned(walletAddress);\n  }\n\n  /**\n   * Get the number of packs created\n   * @returns The total number of packs minted in this contract\n   * @public\n   */\n  async getTotalCount() {\n    return this.erc1155.totalCount();\n  }\n\n  /**\n   * Get whether users can transfer packs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [getRoleHash(\"transfer\"), constants.AddressZero]);\n    return !anyoneCanTransfer;\n  }\n\n  /**\n   * Get Pack Contents\n   * @remarks Get the rewards contained inside a pack.\n   *\n   * @param packId - The id of the pack to get the contents of.\n   * @returns  The contents of the pack.\n   *\n   * @example\n   * ```javascript\n   * const packId = 0;\n   * const contents = await contract.getPackContents(packId);\n   * console.log(contents.erc20Rewards);\n   * console.log(contents.erc721Rewards);\n   * console.log(contents.erc1155Rewards);\n   * ```\n   */\n  async getPackContents(packId) {\n    const {\n      contents,\n      perUnitAmounts\n    } = await this.contractWrapper.read(\"getPackContents\", [packId]);\n    const erc20Rewards = [];\n    const erc721Rewards = [];\n    const erc1155Rewards = [];\n    for (let i = 0; i < contents.length; i++) {\n      const reward = contents[i];\n      const amount = perUnitAmounts[i];\n      switch (reward.tokenType) {\n        case 0:\n          {\n            const tokenMetadata = await fetchCurrencyMetadata(this.contractWrapper.getProvider(), reward.assetContract);\n            const quantityPerReward = utils.formatUnits(amount, tokenMetadata.decimals);\n            const totalRewards = utils.formatUnits(BigNumber.from(reward.totalAmount).div(amount), tokenMetadata.decimals);\n            erc20Rewards.push({\n              contractAddress: reward.assetContract,\n              quantityPerReward,\n              totalRewards\n            });\n            break;\n          }\n        case 1:\n          {\n            erc721Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString()\n            });\n            break;\n          }\n        case 2:\n          {\n            erc1155Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString(),\n              quantityPerReward: amount.toString(),\n              totalRewards: BigNumber.from(reward.totalAmount).div(amount).toString()\n            });\n            break;\n          }\n      }\n    }\n    return {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    };\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Pack\n   * @remarks Create a new pack with the given metadata and rewards and mint it to the connected wallet. See {@link Pack.createTo}\n   *\n   * @param metadataWithRewards - the metadata and rewards to include in the pack\n   * @example\n   * ```javascript\n   * const pack = {\n   *   // The metadata for the pack NFT itself\n   *   packMetadata: {\n   *     name: \"My Pack\",\n   *     description: \"This is a new pack\",\n   *     image: \"ipfs://...\",\n   *   },\n   *   // ERC20 rewards to be included in the pack\n   *   erc20Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       quantityPerReward: 5,\n   *       quantity: 100,\n   *       totalRewards: 20,\n   *     }\n   *   ],\n   *   // ERC721 rewards to be included in the pack\n   *   erc721Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       tokenId: 0,\n   *     }\n   *   ],\n   *   // ERC1155 rewards to be included in the pack\n   *   erc1155Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       tokenId: 0,\n   *       quantityPerReward: 1,\n   *       totalRewards: 100,\n   *     }\n   *   ],\n   *   openStartTime: new Date(), // the date that packs can start to be opened, defaults to now\n   *   rewardsPerPack: 1, // the number of rewards in each pack, defaults to 1\n   * }\n   *\n   * const tx = await contract.create(pack);\n   * ```\n   */\n  create = /* @__PURE__ */buildTransactionFunction(async metadataWithRewards => {\n    const signerAddress = await this.contractWrapper.getSignerAddress();\n    return this.createTo.prepare(signerAddress, metadataWithRewards);\n  });\n\n  /**\n   * Add Pack Contents\n   * @remarks Add contents to an existing pack. See {@link Pack.addPackContents}\n   *\n   * @param packId - token Id of the pack to add contents to\n   * @param packContents - the rewards to include in the pack\n   * @example\n   * ```javascript\n   * const packContents = {\n   *   // ERC20 rewards to be included in the pack\n   *   erc20Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       quantityPerReward: 5,\n   *       quantity: 100,\n   *       totalRewards: 20,\n   *     }\n   *   ],\n   *   // ERC721 rewards to be included in the pack\n   *   erc721Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       tokenId: 0,\n   *     }\n   *   ],\n   *   // ERC1155 rewards to be included in the pack\n   *   erc1155Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       tokenId: 0,\n   *       quantityPerReward: 1,\n   *       totalRewards: 100,\n   *     }\n   *   ],\n   * }\n   *\n   * const tx = await contract.addPackContents(packId, packContents);\n   * ```\n   */\n  addPackContents = /* @__PURE__ */buildTransactionFunction(async (packId, packContents) => {\n    const [signerAddress, parsedContents] = await Promise.all([this.contractWrapper.getSignerAddress(), PackRewardsOutputSchema.parseAsync(packContents)]);\n    const {\n      contents,\n      numOfRewardUnits\n    } = await this.toPackContentArgs(parsedContents);\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"addPackContents\",\n      args: [packId, contents, numOfRewardUnits, signerAddress],\n      parse: receipt => {\n        const event = this.contractWrapper.parseLogs(\"PackUpdated\", receipt?.logs);\n        if (event.length === 0) {\n          throw new Error(\"PackUpdated event not found\");\n        }\n        const id = event[0].args.packId;\n        return {\n          id: id,\n          receipt,\n          data: () => this.erc1155.get(id)\n        };\n      }\n    });\n  });\n\n  /**\n   * Create Pack To Wallet\n   * @remarks Create a new pack with the given metadata and rewards and mint it to the specified address.\n   *\n   * @param to - the address to mint the pack to\n   * @param metadataWithRewards - the metadata and rewards to include in the pack\n   *\n   * @example\n   * ```javascript\n   * const pack = {\n   *   // The metadata for the pack NFT itself\n   *   packMetadata: {\n   *     name: \"My Pack\",\n   *     description: \"This is a new pack\",\n   *     image: \"ipfs://...\",\n   *   },\n   *   // ERC20 rewards to be included in the pack\n   *   erc20Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       quantityPerReward: 5,\n   *       quantity: 100,\n   *       totalRewards: 20,\n   *     }\n   *   ],\n   *   // ERC721 rewards to be included in the pack\n   *   erc721Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       tokenId: 0,\n   *     }\n   *   ],\n   *   // ERC1155 rewards to be included in the pack\n   *   erc1155Rewards: [\n   *     {\n   *       contractAddress: \"0x...\",\n   *       tokenId: 0,\n   *       quantityPerReward: 1,\n   *       totalRewards: 100,\n   *     }\n   *   ],\n   *   openStartTime: new Date(), // the date that packs can start to be opened, defaults to now\n   *   rewardsPerPack: 1, // the number of rewards in each pack, defaults to 1\n   * }\n   *\n   * const tx = await contract.createTo(\"0x...\", pack);\n   * ```\n   */\n  createTo = /* @__PURE__ */buildTransactionFunction(async (to, metadataWithRewards) => {\n    const [uri, parsedMetadata, toAddress] = await Promise.all([uploadOrExtractURI(metadataWithRewards.packMetadata, this.storage), PackMetadataInputSchema.parseAsync(metadataWithRewards), resolveAddress(to)]);\n    const {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    } = parsedMetadata;\n    const rewardsData = {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    };\n    const {\n      contents,\n      numOfRewardUnits\n    } = await this.toPackContentArgs(rewardsData);\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"createPack\",\n      args: [contents, numOfRewardUnits, uri, parsedMetadata.openStartTime, parsedMetadata.rewardsPerPack, toAddress],\n      parse: receipt => {\n        const event = this.contractWrapper.parseLogs(\"PackCreated\", receipt?.logs);\n        if (event.length === 0) {\n          throw new Error(\"PackCreated event not found\");\n        }\n        const packId = event[0].args.packId;\n        return {\n          id: packId,\n          receipt,\n          data: () => this.erc1155.get(packId)\n        };\n      }\n    });\n  });\n\n  /**\n   * Open Pack\n   *\n   * @remarks - Open a pack to reveal the contained rewards. This will burn the specified pack and\n   * the contained assets will be transferred to the opening users wallet.\n   *\n   * @param tokenId - the token ID of the pack you want to open\n   * @param amount - the amount of packs you want to open\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0\n   * const amount = 1\n   * const tx = await contract.open(tokenId, amount);\n   * ```\n   */\n  open = /* @__PURE__ */buildTransactionFunction((() => {\n    var _this = this;\n    return async function (tokenId) {\n      let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n      if (_this._vrf) {\n        throw new Error(\"This contract is using Chainlink VRF, use `contract.vrf.open()` or `contract.vrf.openAndClaim()` instead\");\n      }\n      return Transaction.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"openPack\",\n        args: [tokenId, amount],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: async receipt => {\n          const event = _this.contractWrapper.parseLogs(\"PackOpened\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackOpened event not found\");\n          }\n          const rewards = event[0].args.rewardUnitsDistributed;\n          const erc20Rewards = [];\n          const erc721Rewards = [];\n          const erc1155Rewards = [];\n          for (const reward of rewards) {\n            switch (reward.tokenType) {\n              case 0:\n                {\n                  const tokenMetadata = await fetchCurrencyMetadata(_this.contractWrapper.getProvider(), reward.assetContract);\n                  erc20Rewards.push({\n                    contractAddress: reward.assetContract,\n                    quantityPerReward: utils.formatUnits(reward.totalAmount, tokenMetadata.decimals).toString()\n                  });\n                  break;\n                }\n              case 1:\n                {\n                  erc721Rewards.push({\n                    contractAddress: reward.assetContract,\n                    tokenId: reward.tokenId.toString()\n                  });\n                  break;\n                }\n              case 2:\n                {\n                  erc1155Rewards.push({\n                    contractAddress: reward.assetContract,\n                    tokenId: reward.tokenId.toString(),\n                    quantityPerReward: reward.totalAmount.toString()\n                  });\n                  break;\n                }\n            }\n          }\n          return {\n            erc20Rewards,\n            erc721Rewards,\n            erc1155Rewards\n          };\n        }\n      });\n    };\n  })());\n\n  /** *****************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  async toPackContentArgs(metadataWithRewards) {\n    const contents = [];\n    const numOfRewardUnits = [];\n    const {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    } = metadataWithRewards;\n    const provider = this.contractWrapper.getProvider();\n    const owner = await this.contractWrapper.getSignerAddress();\n    for (const erc20 of erc20Rewards) {\n      const normalizedQuantity = await normalizePriceValue(provider, erc20.quantityPerReward, erc20.contractAddress);\n      // Multiply the quantity of one reward by the number of rewards\n      const totalQuantity = normalizedQuantity.mul(erc20.totalRewards);\n      const hasAllowance = await hasERC20Allowance(this.contractWrapper, erc20.contractAddress, totalQuantity);\n      if (!hasAllowance) {\n        throw new Error(`ERC20 token with contract address \"${erc20.contractAddress}\" does not have enough allowance to transfer.\\n\\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\\n\\nawait sdk.getToken(\"${erc20.contractAddress}\").setAllowance(\"${this.getAddress()}\", ${totalQuantity});\\n\\n`);\n      }\n      numOfRewardUnits.push(erc20.totalRewards);\n      contents.push({\n        assetContract: erc20.contractAddress,\n        tokenType: 0,\n        totalAmount: totalQuantity,\n        tokenId: 0\n      });\n    }\n    for (const erc721 of erc721Rewards) {\n      const isApproved = await isTokenApprovedForTransfer(this.contractWrapper.getProvider(), this.getAddress(), erc721.contractAddress, erc721.tokenId, owner);\n      if (!isApproved) {\n        throw new Error(`ERC721 token \"${erc721.tokenId}\" with contract address \"${erc721.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getNFTCollection(\"${erc721.contractAddress}\").setApprovalForToken(\"${this.getAddress()}\", ${erc721.tokenId});\\n\\n`);\n      }\n      numOfRewardUnits.push(\"1\");\n      contents.push({\n        assetContract: erc721.contractAddress,\n        tokenType: 1,\n        totalAmount: 1,\n        tokenId: erc721.tokenId\n      });\n    }\n    for (const erc1155 of erc1155Rewards) {\n      const isApproved = await isTokenApprovedForTransfer(this.contractWrapper.getProvider(), this.getAddress(), erc1155.contractAddress, erc1155.tokenId, owner);\n      if (!isApproved) {\n        throw new Error(`ERC1155 token \"${erc1155.tokenId}\" with contract address \"${erc1155.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getEdition(\"${erc1155.contractAddress}\").setApprovalForAll(\"${this.getAddress()}\", true);\\n\\n`);\n      }\n      numOfRewardUnits.push(erc1155.totalRewards);\n      contents.push({\n        assetContract: erc1155.contractAddress,\n        tokenType: 2,\n        totalAmount: BigNumber.from(erc1155.quantityPerReward).mul(BigNumber.from(erc1155.totalRewards)),\n        tokenId: erc1155.tokenId\n      });\n    }\n    return {\n      contents,\n      numOfRewardUnits\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return Transaction.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n  detectVrf() {\n    if (detectContractFeature(this.contractWrapper, \"PackVRF\")) {\n      return new PackVRF(this.contractWrapper.getSignerOrProvider(), this.contractWrapper.address, this.storage, this.contractWrapper.options, this.chainId);\n    }\n    return undefined;\n  }\n}\n\nexport { Pack };\n"],"names":["utils.formatUnits","constants.AddressZero"],"mappings":"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"}