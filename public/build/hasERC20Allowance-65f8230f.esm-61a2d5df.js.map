{"version":3,"file":"hasERC20Allowance-65f8230f.esm-61a2d5df.js","sources":["../../node_modules/@thirdweb-dev/sdk/dist/hasERC20Allowance-65f8230f.esm.js"],"sourcesContent":["import { cu as ContractWrapper } from './index-4902f18c.esm.js';\n\n/**\n * @internal\n */\nasync function hasERC20Allowance(contractToApprove, currencyAddress, value) {\n  const provider = contractToApprove.getProvider();\n  const ERC20Abi = (await import('@thirdweb-dev/contracts-js/dist/abis/IERC20.json')).default;\n  const erc20 = new ContractWrapper(provider, currencyAddress, ERC20Abi, {}, contractToApprove.storage);\n  const owner = await contractToApprove.getSignerAddress();\n  const spender = contractToApprove.address;\n  const allowance = await erc20.read(\"allowance\", [owner, spender]);\n  return allowance.gte(value);\n}\n\nexport { hasERC20Allowance as h };\n"],"names":[],"mappings":";;AAEA;AACA;AACA;AACA,eAAe,iBAAiB,CAAC,iBAAiB,EAAE,eAAe,EAAE,KAAK,EAAE;AAC5E,EAAE,MAAM,QAAQ,GAAG,iBAAiB,CAAC,WAAW,EAAE,CAAC;AACnD,EAAE,MAAM,QAAQ,GAAG,CAAC,MAAM,OAAO,mBAAkD,qCAAC,EAAE,OAAO,CAAC;AAC9F,EAAE,MAAM,KAAK,GAAG,IAAI,eAAe,CAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,EAAE,EAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACxG,EAAE,MAAM,KAAK,GAAG,MAAM,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;AAC3D,EAAE,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC;AAC5C,EAAE,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;AACpE,EAAE,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9B;;;;"}